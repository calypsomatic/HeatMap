{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/bee-rah/programming/Heatmap/MapView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from 'react';\nimport { Map, TileLayer } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport Geolocation from '@react-native-community/geolocation';\n\nvar MapView = function (_Component) {\n  _inherits(MapView, _Component);\n\n  var _super = _createSuper(MapView);\n\n  function MapView(props) {\n    var _this;\n\n    _classCallCheck(this, MapView);\n\n    _this = _super.call(this, props);\n    Geolocation.getCurrentPosition(function (position) {\n      _this.setState({\n        currentLocation: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        },\n        zoom: 14\n      });\n    });\n    return _this;\n  }\n\n  _createClass(MapView, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.state) {\n        return React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 14\n          }\n        }, \"Loading\");\n      }\n\n      return React.createElement(Map, {\n        center: this.state.currentLocation,\n        zoom: this.state.zoom,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, React.createElement(TileLayer, {\n        url: \"http://tile.stamen.com/toner/{z}/{x}/{y}.png\",\n        attribution: \"Map tiles by Stamen Design, under CC BY 3.0. Data by OpenStreetMap, under ODbL.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return MapView;\n}(Component);\n\nexport default MapView;","map":{"version":3,"sources":["/home/bee-rah/programming/Heatmap/MapView.js"],"names":["React","Component","useState","Map","TileLayer","Geolocation","MapView","props","getCurrentPosition","position","setState","currentLocation","lat","coords","latitude","lng","longitude","zoom","state"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,eAA/B;AACA,OAAO,0BAAP;AACA,OAAOC,WAAP,MAAwB,qCAAxB;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACAF,IAAAA,WAAW,CAACG,kBAAZ,CAA+B,UAAAC,QAAQ,EAAI;AACzC,YAAKC,QAAL,CAAc;AACZC,QAAAA,eAAe,EAAE;AAAEC,UAAAA,GAAG,EAAEH,QAAQ,CAACI,MAAT,CAAgBC,QAAvB;AAAiCC,UAAAA,GAAG,EAAEN,QAAQ,CAACI,MAAT,CAAgBG;AAAtD,SADL;AAEVC,QAAAA,IAAI,EAAE;AAFI,OAAd;AAID,KALD;AAFiB;AAQlB;;;;6BAGQ;AACP,UAAI,CAAC,KAAKC,KAAV,EAAiB;AACf,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD;;AAID,aACE,oBAAC,GAAD;AAAK,QAAA,MAAM,EAAE,KAAKA,KAAL,CAAWP,eAAxB;AAAyC,QAAA,IAAI,EAAE,KAAKO,KAAL,CAAWD,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,GAAG,EAAC,8CADN;AAEE,QAAA,WAAW,EAAC,iFAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AASD;;;;EA5BmBhB,S;;AA+BtB,eAAeK,OAAf","sourcesContent":["import React, { Component, useState } from 'react';\nimport { Map, TileLayer } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport Geolocation from '@react-native-community/geolocation';\n\nclass MapView extends Component {\n  constructor(props) {\n    super(props);\n    Geolocation.getCurrentPosition(position => {\n      this.setState({\n        currentLocation: { lat: position.coords.latitude, lng: position.coords.longitude },\n          zoom: 14,\n      })\n    });\n  }\n\n\n  render() {\n    if (!this.state) {\n      return <div>Loading</div>\n    }\n\n    //TODO: fix attribution.  given here: http://maps.stamen.com/#toner/12/37.7706/-122.3782\n\n    return (\n      <Map center={this.state.currentLocation} zoom={this.state.zoom}>\n        <TileLayer\n          url=\"http://tile.stamen.com/toner/{z}/{x}/{y}.png\"\n          attribution=\"Map tiles by Stamen Design, under CC BY 3.0. Data by OpenStreetMap, under ODbL.\"\n        />\n\n      </Map>\n    );\n  }\n}\n\nexport default MapView;\n"]},"metadata":{},"sourceType":"module"}